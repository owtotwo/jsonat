// Jsonat -- A Json Library in C++
// Copyright (c) 2016 sysu_AT
// All rights reserved.

1. Output the escape charactors in form like '\n' or '\r'
2. Api should be redesigned completely :
   Json g; // g = null;
   Json a = "string";
   Json b = 123.4e-05;
   Json c = true;
   Json d = false;
   Json e = make_object({{"hello", 123}, {"world", true}});
   Json f = make_array({a, b, c, d});
   
3. make_array() and make_object();
4. apply the jsonat in another project to read and write the configure files.
5. it should be able to use like a["address"]["street"], or b[4][1].
6. maybe support the comments...? (not the standard in JSON) // will not do this
   i.e. : {"age" : "18" /* this is the comment */} // all right a comment too
   I think it could implement by two pass parsing. (first for the comments, 
   second for the data)
7. roundtrip test. // Done.
8. When I see the API of MySQL connect Java (Class ResultSet), I think it is 
   what I want to design... for the configure files saving and loading, like 
   a database but concise and simple use.
9. sample:
   Json a = "hello";
   Json b = " world\n";
   Json c = 10;
   Json d = 2.5;
   Json e = true;
   Json f = make_array({{"a", 1}, {"b", 2}, {"c", 3}});
   a += b;
   c = c * d;
   e = !e;
   f[0][0] == "a";
   f[1][1] == 2;
10. State exceptions and errors.
11. It seems not to support the big integer like 15331120. // Done.
12. Json arr(set.begin(), set.end());


testing
